Timer unit: 1e-06 s

File: ./score_contigs_multinomial.py
Function: main at line 15
Total time: 57.1861 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    15                                           @profile
    16                                           def main(contigs_file,taxonomy_file, dir_path, kmer_length):
    17                                           
    18         1            5      5.0      0.0      groups = []
    19         1          241    241.0      0.0      DNA.generate_kmer_hash(kmer_length)
    20                                           
    21         1       214679 214679.0      0.4      contigs = read_contigs_file(contigs_file)
    22                                               
    23                                               # Divide genomes into groups, one for each genus
    24         1          102    102.0      0.0      meta_genomes = genome_info_from_parsed_taxonomy_file(taxonomy_file)
    25                                           
    26                                               # Fetch sequence for each genome
    27         1      1003238 1003238.0      1.8      genomes = read_FASTA_files_no_groups(meta_genomes, dir_path)
    28                                           
    29         8           24      3.0      0.0      for genome in genomes:
    30         7     22659552 3237078.9     39.6          genome.calculate_signature()
    31         7         1196    170.9      0.0          genome.pseudo_par = mn.fit_nonzero_parameters(genome.signature,DNA.kmer_hash_count)
    32                                           
    33         1            3      3.0      0.0      scores = []
    34       300          760      2.5      0.0      for contig in contigs:
    35       299      3930451  13145.3      6.9          contig.calculate_signature()
    36      2392         6362      2.7      0.0          for genome in genomes:
    37      2093         6117      2.9      0.0              if contig.id == genome.id:
    38       299        21536     72.0      0.0                  temp_genome_signature = copy(genome.signature)
    39       299        15946     53.3      0.0                  temp_genome_signature.subtract(contig.signature)
    40       299          806      2.7      0.0                  temp_pseudo_par = mn.fit_nonzero_parameters(\
    41       299        41104    137.5      0.1                      temp_genome_signature, DNA.kmer_hash_count)
    42       299          823      2.8      0.0                  p_val = mn.log_probability(\
    43       299      4177717  13972.3      7.3                      contig.signature, temp_pseudo_par)
    44                                                       else:
    45      1794         4366      2.4      0.0                  p_val = mn.log_probability(\
    46      1794     25036426  13955.6     43.8                      contig.signature, genome.pseudo_par)
    47      2093         6215      3.0      0.0              scores.append(\
    48      2093        30812     14.7      0.1                  Score(p_val, contig, genome, contig.contig_id))
    49                                           
    50         1           27     27.0      0.0      sys.stdout.write("p_value\tcontig_family\tcontig_genus\tcontig_species\tcontig_genome\tcompare_family\tcompare_genus\tcompare_species\tcompare_genome\tcontig_id" + os.linesep)
    51      2094         5313      2.5      0.0      for score in scores:
    52      2093        22260     10.6      0.0          sys.stdout.write(str(score) + '\n')

File: /home/johannes/.virtualenvs/probin2.7/local/lib/python2.7/site-packages/probin-0.1-py2.7.egg/probin/model/composition/multinomial.py
Function: log_probability at line 19
Total time: 28.7983 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    19                                           @profile
    20                                           def log_probability(signature, prob_vector):
    21      2093         9157      4.4      0.0      phi = sum(signature.values())
    22      2093         3656      1.7      0.0      log_prod = 0
    23     69069       142864      2.1      0.5      for i,cnt in signature.iteritems():
    24     66976     14787377    220.8     51.3          denom = _log_fac(cnt)
    25     66976       657073      9.8      2.3          log_prod += (log(prob_vector[i])*cnt) - denom
    26      2093     13198163   6305.9     45.8      return log_prod + _log_fac(phi)

