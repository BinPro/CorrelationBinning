Timer unit: 1e-06 s

File: ./score_contigs_multinomial.py
Function: main at line 15
Total time: 55.7365 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    15                                           @profile
    16                                           def main(contigs_file,taxonomy_file, dir_path, kmer_length):
    17                                           
    18         1            4      4.0      0.0      groups = []
    19         1          235    235.0      0.0      DNA.generate_kmer_hash(kmer_length)
    20                                           
    21         1       213347 213347.0      0.4      contigs = read_contigs_file(contigs_file)
    22                                               
    23                                               # Divide genomes into groups, one for each genus
    24         1          105    105.0      0.0      meta_genomes = genome_info_from_parsed_taxonomy_file(taxonomy_file)
    25                                           
    26                                               # Fetch sequence for each genome
    27         1      1006287 1006287.0      1.8      genomes = read_FASTA_files_no_groups(meta_genomes, dir_path)
    28                                           
    29         8           25      3.1      0.0      for genome in genomes:
    30         7     21937732 3133961.7     39.4          genome.calculate_signature()
    31         7         1209    172.7      0.0          genome.pseudo_par = mn.fit_nonzero_parameters(genome.signature,DNA.kmer_hash_count)
    32                                           
    33         1            3      3.0      0.0      scores = []
    34       300          768      2.6      0.0      for contig in contigs:
    35       299      3726691  12463.8      6.7          contig.calculate_signature()
    36      2392         6385      2.7      0.0          for genome in genomes:
    37      2093         6057      2.9      0.0              if contig.id == genome.id:
    38       299        21562     72.1      0.0                  temp_genome_signature = copy(genome.signature)
    39       299        15414     51.6      0.0                  temp_genome_signature.subtract(contig.signature)
    40       299          799      2.7      0.0                  temp_pseudo_par = mn.fit_nonzero_parameters(\
    41       299        40616    135.8      0.1                      temp_genome_signature, DNA.kmer_hash_count)
    42       299          794      2.7      0.0                  p_val = mn.log_probability(\
    43       299      4102875  13722.0      7.4                      contig.signature, temp_pseudo_par)
    44                                                       else:
    45      1794         4243      2.4      0.0                  p_val = mn.log_probability(\
    46      1794     24584141  13703.5     44.1                      contig.signature, genome.pseudo_par)
    47      2093         7455      3.6      0.0              scores.append(\
    48      2093        33067     15.8      0.1                  Score(p_val, contig, genome, contig.contig_id))
    49                                           
    50         1           33     33.0      0.0      sys.stdout.write("p_value\tcontig_family\tcontig_genus\tcontig_species\tcontig_genome\tcompare_family\tcompare_genus\tcompare_species\tcompare_genome\tcontig_id" + os.linesep)
    51      2094         5099      2.4      0.0      for score in scores:
    52      2093        21505     10.3      0.0          sys.stdout.write(str(score) + '\n')

