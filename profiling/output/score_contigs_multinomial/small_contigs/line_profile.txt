Timer unit: 1e-06 s

File: ./score_contigs_multinomial.py
Function: main at line 15
Total time: 24.2906 s

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    15                                           @profile
    16                                           def main(contigs_file,taxonomy_file, dir_path, kmer_length):
    17                                           
    18         1            4      4.0      0.0      groups = []
    19         1          258    258.0      0.0      DNA.generate_kmer_hash(kmer_length)
    20                                           
    21         1        10915  10915.0      0.0      contigs = read_contigs_file(contigs_file)
    22                                               
    23                                               # Divide genomes into groups, one for each genus
    24         1        19468  19468.0      0.1      meta_genomes = genome_info_from_parsed_taxonomy_file(taxonomy_file)
    25                                           
    26                                               # Fetch sequence for each genome
    27         1      1038951 1038951.0      4.3      genomes = read_FASTA_files_no_groups(meta_genomes, dir_path)
    28                                           
    29         8           26      3.2      0.0      for genome in genomes:
    30         7     22721608 3245944.0     93.5          genome.calculate_signature()
    31         7         1246    178.0      0.0          genome.pseudo_par = mn.fit_nonzero_parameters(genome.signature,DNA.kmer_hash_count)
    32                                           
    33         1            3      3.0      0.0      scores = []
    34        30           70      2.3      0.0      for contig in contigs:
    35        29        43826   1511.2      0.2          contig.calculate_signature()
    36       232          558      2.4      0.0          for genome in genomes:
    37       203          506      2.5      0.0              if contig.id == genome.id:
    38        29         1800     62.1      0.0                  temp_genome_signature = copy(genome.signature)
    39        29         1519     52.4      0.0                  temp_genome_signature.subtract(contig.signature)
    40        29           71      2.4      0.0                  temp_pseudo_par = mn.fit_nonzero_parameters(\
    41        29         3402    117.3      0.0                      temp_genome_signature, DNA.kmer_hash_count)
    42        29           78      2.7      0.0                  p_val = mn.log_probability(\
    43        29        63200   2179.3      0.3                      contig.signature, temp_pseudo_par)
    44                                                       else:
    45       174          390      2.2      0.0                  p_val = mn.log_probability(\
    46       174       377369   2168.8      1.6                      contig.signature, genome.pseudo_par)
    47       203          561      2.8      0.0              scores.append(\
    48       203         2245     11.1      0.0                  Score(p_val, contig, genome, contig.contig_id))
    49                                           
    50         1           29     29.0      0.0      sys.stdout.write("p_value\tcontig_family\tcontig_genus\tcontig_species\tcontig_genome\tcompare_family\tcompare_genus\tcompare_species\tcompare_genome\tcontig_id" + os.linesep)
    51       204          481      2.4      0.0      for score in scores:
    52       203         2058     10.1      0.0          sys.stdout.write(str(score) + '\n')

